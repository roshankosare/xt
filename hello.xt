var a = 0;
var MSIZE = 0;
var MMEM = 0;

function memalloc(size){
   MSIZE = size;
   asm([
      "mov eax , [MSIZE]",
      "mov ecx , eax",
      "call malloc",
       "mov [MMEM] , eax",
   ]);
  return MMEM;
}


function print(x){
   
   var length = 0;
   var temp = x;
   var maxBuffer = 1024;
   var buffer = memalloc(maxBuffer);
   var tempBuffer = buffer;
   var ch = 0;
   while(@temp != 0){
      @tempBuffer = @temp;
      ch = @temp;
      asm([
         "pop eax",
         "and eax , 0xFF",
         "call print_eax"
      ]);
      temp++;
      tempBuffer++;
      length++;
   }
   var strlength = length;
   var strpointer = buffer;
   
  
   asm([    "pop ecx                           ; load the address of the string",
            "pop edx                           ; load the length of the string",                   
            "mov eax, 4                        ; syscall number for sys_write",
            "mov ebx, 1                        ; file descriptor 1 (stdout)",             
            "int 0x80                          ; make syscall to write",
         ]);
      
 }

 
print(" hello world ");


 



 




